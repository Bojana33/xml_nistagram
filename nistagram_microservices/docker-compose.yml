version: '3.3'

services:

    rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: rabbitmqContainer
      hostname: rabbitmq
      networks:
        service-discovery-network:
          aliases:
              - rabbitmq
      ports:
        - 5672:5672
      volumes:
        - rabbitmq_volume:/var/lib/rabbitmq

    database:
      image: postgres
      container_name: postgre_db
      restart: always
      networks:
        service-discovery-network:
          aliases:
            - database
      environment:
              POSTGRES_PASSWORD: bojana
              POSTGRES_DATABASE: ${POSTGRES_DATABASE}
              POSTGRES_USERNAME: postgres

      ports:
        - 5432:5432
      volumes:
        - database-data:/var/lib/postgres

    user-service:
      build: ./user-service
      image: user_service_image
      container_name: userServiceContainer
      hostname: user-service
      networks:
        service-discovery-network:
          aliases:
            - user-service
      environment:
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: bojana
        DATABASE_DOMAIN: database
        DATABASE_SCHEME: ${DATABASE_SCHEME}
        RABBITMQ_NETWORK: rabbitmq
      volumes:
        - $HOME/.m2:/root/.m2
      depends_on:
        - database
        - rabbitmq
      ports:
        - 8089:8089

    post-service:
      build: ./post-service
      image: post_service_image
      container_name: postServiceContainer
      hostname: post-service
      networks:
        service-discovery-network:
          aliases:
            - post-service
      environment:
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: bojana
        DATABASE_DOMAIN: database
        DATABASE_SCHEME: ${DATABASE_SCHEME}
        RABBITMQ_NETWORK: rabbitmq
      volumes:
        - $HOME/.m2:/root/.m2
      depends_on:
        - database
        - rabbitmq
      ports:
        - 8088:8088

    photo-service:
      build: ./photo-service
      image: photo_service_image
      container_name: photoServiceContainer
      hostname: photo-service
      networks:
        service-discovery-network:
          aliases:
            - photo-service
      environment:
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: bojana
        DATABASE_DOMAIN: database
        DATABASE_SCHEME: ${DATABASE_SCHEME}
        RABBITMQ_NETWORK: rabbitmq
      volumes:
        - $HOME/.m2:/root/.m2
      depends_on:
        - database
        - rabbitmq
      ports:
        - 8087:8087

#    zuul-api-gateway:
#      build: ./zuul-api-gateway
#      image: zuul_api_gateway_image
#      container_name: zuulContainer
#      hostname: zuul-gateway
#      networks:
#        service-discovery-network:
#          aliases:
#            - zuul-gateway
#      environment:
#        USER_ALIAS: user-service
#        POST_ALIAS: post-service
#        PHOTO_ALIAS: photo-service
#      ports:
#        - 8079:8079
#      volumes:
#          - $HOME/.m2:/root/.m2

volumes:
  database-data:
  rabbitmq_volume:

networks:
  service-discovery-network:
    name: service-discovery-network
    driver: bridge


